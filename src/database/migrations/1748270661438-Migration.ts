import { MigrationInterface, QueryRunner } from "typeorm";

export class Migration1748270661438 implements MigrationInterface {
    name = 'Migration1748270661438'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "UserLogins" ("loginProvider" text NOT NULL, "providerKey" text NOT NULL, "providerDisplayName" text, "userId" uuid NOT NULL, CONSTRAINT "PK_9b9fe63c2b33c3f4cf0902aef01" PRIMARY KEY ("loginProvider", "providerKey"))`);
        await queryRunner.query(`CREATE TABLE "UserOtps" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "userId" uuid NOT NULL, "otpType" integer NOT NULL, "token" text NOT NULL, "destination" text NOT NULL, "code" text NOT NULL, "expiryTime" TIMESTAMP WITH TIME ZONE NOT NULL, "createdDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "lastModifiedDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "createdBy" uuid NOT NULL, "lastModifiedBy" uuid NOT NULL, "isDelete" boolean NOT NULL DEFAULT false, CONSTRAINT "PK_c17da2ecdd90d5964bb7d04b223" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "UserSocials" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "userId" uuid NOT NULL, "type" integer NOT NULL, "socialKey" text NOT NULL, "firstName" text NOT NULL, "lastName" text NOT NULL, "createdDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "createdBy" uuid NOT NULL, "lastModifiedDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "lastModifiedBy" uuid NOT NULL, "isDelete" boolean NOT NULL DEFAULT false, CONSTRAINT "PK_37b4c614ce0d05b410131cc8ff1" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "UserTokens" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "userId" uuid NOT NULL, "LoginProvider" text NOT NULL, "Name" text NOT NULL, "Value" text NOT NULL, "ExpiredDate" TIMESTAMP WITH TIME ZONE NOT NULL, CONSTRAINT "PK_6b9c9a156c7f27ea12fd4829fbf" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "UserClaims" ("Id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "UserId" uuid NOT NULL, "ClaimType" text NOT NULL, "ClaimValue" text NOT NULL, CONSTRAINT "PK_b3ae2008ef0035b845edc020307" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`CREATE TABLE "UserRefreshTokens" ("Id" uuid NOT NULL DEFAULT uuid_generate_v4(), "UserId" uuid NOT NULL, "RefreshToken" text NOT NULL, "RefreshTokenExpiryTime" TIMESTAMP WITH TIME ZONE NOT NULL, "CreatedDate" TIMESTAMP WITH TIME ZONE NOT NULL, "CreatedBy" uuid NOT NULL, "LastModifiedDate" TIMESTAMP WITH TIME ZONE NOT NULL, "LastModifiedBy" uuid NOT NULL, "IsDelete" boolean NOT NULL DEFAULT false, CONSTRAINT "PK_a91b3ae887dc811358c5e5062ef" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`CREATE TABLE "RoleClaims" ("Id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "RoleId" uuid NOT NULL, "ClaimType" text NOT NULL, "ClaimValue" text NOT NULL, CONSTRAINT "PK_7f6ec4809ce3f2bdf27f12b42dc" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`CREATE TABLE "Roles" ("Id" uuid NOT NULL DEFAULT uuid_generate_v4(), "DisplayName" text NOT NULL, "Name" character varying(256) NOT NULL, "NormalizedName" character varying(256) NOT NULL, "ConcurrencyStamp" text NOT NULL, CONSTRAINT "PK_04f7be88261f9d1e55675c0ee75" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`CREATE TABLE "UserRoles" ("Id" uuid NOT NULL DEFAULT uuid_generate_v4(), "UserId" uuid NOT NULL, "RoleId" uuid NOT NULL, CONSTRAINT "PK_2167a51985d902b272f362b062d" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`CREATE TABLE "Categories" ("Id" uuid NOT NULL DEFAULT uuid_generate_v4(), "ThumbnailUrl" text NOT NULL, "Name" text NOT NULL, "Title" text NOT NULL, "Summary" text NOT NULL, "CreatedDate" TIMESTAMP WITH TIME ZONE NOT NULL, "CreatedBy" uuid NOT NULL, "LastModifiedDate" TIMESTAMP WITH TIME ZONE NOT NULL, "LastModifiedBy" uuid NOT NULL, "IsDelete" boolean NOT NULL DEFAULT false, "IsActive" boolean NOT NULL DEFAULT false, CONSTRAINT "PK_04ba3e718fe1c234e75a30c457a" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`CREATE TABLE "MediaFiles" ("Id" uuid NOT NULL DEFAULT uuid_generate_v4(), "FileType" integer NOT NULL, "FileHostType" integer NOT NULL, "Name" text NOT NULL, "Url" text NOT NULL, "MiniUrl" text NOT NULL, "FileKey" text NOT NULL, "FileSize" bigint NOT NULL, "Width" integer NOT NULL, "Height" integer NOT NULL, "CreatedDate" TIMESTAMP WITH TIME ZONE NOT NULL, "CreatedBy" uuid NOT NULL, "LastModifiedDate" TIMESTAMP WITH TIME ZONE NOT NULL, "LastModifiedBy" uuid NOT NULL, "IsDelete" boolean NOT NULL DEFAULT false, CONSTRAINT "PK_a6e3e969a1c3a78de03d2a1d5b3" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`CREATE TABLE "PostViews" ("id" SERIAL NOT NULL, "uuid" uuid NOT NULL, "PostIduuid" uuid NOT NULL, "PostItemHashId" text NOT NULL, "year" integer NOT NULL, "month" integer NOT NULL, "day" integer NOT NULL, "view" integer NOT NULL, CONSTRAINT "PK_7508ba4ac7f8077b474218df0b0" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "PostVotes" ("Id" uuid NOT NULL DEFAULT uuid_generate_v4(), "PostId" uuid NOT NULL, "UserId" uuid NOT NULL, "CreatedDate" TIMESTAMP WITH TIME ZONE NOT NULL, "CreatedBy" uuid NOT NULL, "LastModifiedDate" TIMESTAMP WITH TIME ZONE NOT NULL, "LastModifiedBy" uuid NOT NULL, "IsDelete" boolean NOT NULL DEFAULT false, CONSTRAINT "PK_eda16a0314db79a6cc3a68a0f74" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`CREATE TABLE "PostUserActivities" ("Id" uuid NOT NULL DEFAULT uuid_generate_v4(), "PostId" uuid NOT NULL, "PostItemId" uuid NOT NULL, "UserId" uuid NOT NULL, "Date" TIMESTAMP WITH TIME ZONE NOT NULL, "LatestPos" integer NOT NULL, "PostItemHashId" text NOT NULL, CONSTRAINT "PK_4883b09f4c56ff4c2120c960b49" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`CREATE TABLE "PostItems" ("Id" uuid NOT NULL DEFAULT uuid_generate_v4(), "PostId" uuid NOT NULL, "Title" text NOT NULL, "Name" text NOT NULL, "HashId" text NOT NULL, "Body" text NOT NULL, "Status" integer NOT NULL, "PublishDate" TIMESTAMP WITH TIME ZONE, "CreatedDate" TIMESTAMP WITH TIME ZONE NOT NULL, "CreatedBy" uuid NOT NULL, "LastModifiedDate" TIMESTAMP WITH TIME ZONE NOT NULL, "LastModifiedBy" uuid NOT NULL, "IsDelete" boolean NOT NULL DEFAULT false, "TotalPos" integer NOT NULL, CONSTRAINT "PK_73c155734f9f2ea3d7223760acb" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`CREATE TABLE "Posts" ("Id" uuid NOT NULL DEFAULT uuid_generate_v4(), "HashId" uuid NOT NULL, "UserId" uuid NOT NULL, "Name" text NOT NULL, "Title" text NOT NULL, "Summary" text NOT NULL, "Status" integer NOT NULL, "StatusReason" text NOT NULL, "IsCompleted" boolean NOT NULL DEFAULT false, "CreatedDate" TIMESTAMP WITH TIME ZONE NOT NULL, "CreatedBy" uuid NOT NULL, "LastModifiedDate" TIMESTAMP WITH TIME ZONE NOT NULL, "LastModifiedBy" uuid NOT NULL, "IsDelete" boolean NOT NULL DEFAULT false, "CategoryId" uuid, "CoverImgId" uuid, "PublishDate" TIMESTAMP WITH TIME ZONE, "ThumbnailImgId" uuid, CONSTRAINT "PK_0a2eec8047497b5ab36986648cc" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`CREATE TABLE "Users" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "firstName" character varying(256), "lastName" character varying(256), "dateOfBirth" TIMESTAMP WITH TIME ZONE, "gender" integer, "refreshToken" text, "refreshTokenExpiryTime" TIMESTAMP WITH TIME ZONE, "referralCode" text, "avatar" character varying(500), "status" integer, "isDelete" boolean NOT NULL DEFAULT false, "createdDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "createdBy" uuid, "lastModifiedDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "lastModifiedBy" uuid, "activatedDate" TIMESTAMP WITH TIME ZONE, "lastLoginDate" TIMESTAMP WITH TIME ZONE, "statusReason" text, "location" text, "userName" character varying(256), "normalizedUserName" character varying(256), "email" character varying(256), "normalizedEmail" character varying(256), "emailConfirmed" boolean NOT NULL DEFAULT false, "passwordHash" text, "securityStamp" text, "concurrencyStamp" text, "phoneNumber" text, "phoneNumberConfirmed" boolean NOT NULL DEFAULT false, "twoFactorEnabled" boolean NOT NULL DEFAULT false, "lockoutEnd" TIMESTAMP WITH TIME ZONE, "lockoutEnabled" boolean NOT NULL DEFAULT false, "accessFailedCount" integer NOT NULL DEFAULT '0', CONSTRAINT "PK_16d4f7d636df336db11d87413e3" PRIMARY KEY ("id"))`);
        await queryRunner.query(`ALTER TABLE "UserLogins" ADD CONSTRAINT "FK_8d3eed87c7360dbdc49fac1c24c" FOREIGN KEY ("userId") REFERENCES "Users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "UserOtps" ADD CONSTRAINT "FK_05c5c50b41121d3c1c1e1b795ba" FOREIGN KEY ("userId") REFERENCES "Users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "UserSocials" ADD CONSTRAINT "FK_5657108e203a5fddba11bfcfe50" FOREIGN KEY ("userId") REFERENCES "Users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "UserTokens" ADD CONSTRAINT "FK_c6f9656c0eb5ae8adfbb5094fd8" FOREIGN KEY ("userId") REFERENCES "Users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "UserClaims" ADD CONSTRAINT "FK_298150cde4c6cd60d77f8ec48d8" FOREIGN KEY ("UserId") REFERENCES "Users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "UserRefreshTokens" ADD CONSTRAINT "FK_b762c2ee45e1bf683df989dcea0" FOREIGN KEY ("UserId") REFERENCES "Users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "RoleClaims" ADD CONSTRAINT "FK_0e61caf01a527d8fa060d9758d2" FOREIGN KEY ("RoleId") REFERENCES "Roles"("Id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "UserRoles" ADD CONSTRAINT "FK_bd9e34313e9bb51d8b448f48f5c" FOREIGN KEY ("UserId") REFERENCES "Users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "UserRoles" ADD CONSTRAINT "FK_eebd61741964d948d277e831c4c" FOREIGN KEY ("RoleId") REFERENCES "Roles"("Id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "PostViews" ADD CONSTRAINT "FK_2e53580c4735d68263f80f55a49" FOREIGN KEY ("PostIduuid") REFERENCES "Posts"("Id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "PostVotes" ADD CONSTRAINT "FK_726942ce44f65576219f23a3d3c" FOREIGN KEY ("PostId") REFERENCES "Posts"("Id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "PostVotes" ADD CONSTRAINT "FK_42dc2d7cdbae0866d5966fd6476" FOREIGN KEY ("UserId") REFERENCES "Users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "PostUserActivities" ADD CONSTRAINT "FK_c302daff8bba408263da61bf430" FOREIGN KEY ("PostId") REFERENCES "Posts"("Id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "PostUserActivities" ADD CONSTRAINT "FK_10dc3e5d8c02e2b642d4494b7c8" FOREIGN KEY ("PostItemId") REFERENCES "PostItems"("Id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "PostUserActivities" ADD CONSTRAINT "FK_b1a9efff61cf1ed513de7c317fe" FOREIGN KEY ("UserId") REFERENCES "Users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "PostItems" ADD CONSTRAINT "FK_5caa6f50938c4a09d050fc8a7f4" FOREIGN KEY ("PostId") REFERENCES "Posts"("Id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "Posts" ADD CONSTRAINT "FK_7de6947490541a532143a8805a8" FOREIGN KEY ("UserId") REFERENCES "Users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "Posts" ADD CONSTRAINT "FK_5c7eea1edf40b7f9f183da81d6c" FOREIGN KEY ("CategoryId") REFERENCES "Categories"("Id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "Posts" ADD CONSTRAINT "FK_3835339ce0868de7bd508bfc660" FOREIGN KEY ("CoverImgId") REFERENCES "MediaFiles"("Id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "Posts" ADD CONSTRAINT "FK_3203c775717adbe508672c5cb1a" FOREIGN KEY ("ThumbnailImgId") REFERENCES "MediaFiles"("Id") ON DELETE SET NULL ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "Posts" DROP CONSTRAINT "FK_3203c775717adbe508672c5cb1a"`);
        await queryRunner.query(`ALTER TABLE "Posts" DROP CONSTRAINT "FK_3835339ce0868de7bd508bfc660"`);
        await queryRunner.query(`ALTER TABLE "Posts" DROP CONSTRAINT "FK_5c7eea1edf40b7f9f183da81d6c"`);
        await queryRunner.query(`ALTER TABLE "Posts" DROP CONSTRAINT "FK_7de6947490541a532143a8805a8"`);
        await queryRunner.query(`ALTER TABLE "PostItems" DROP CONSTRAINT "FK_5caa6f50938c4a09d050fc8a7f4"`);
        await queryRunner.query(`ALTER TABLE "PostUserActivities" DROP CONSTRAINT "FK_b1a9efff61cf1ed513de7c317fe"`);
        await queryRunner.query(`ALTER TABLE "PostUserActivities" DROP CONSTRAINT "FK_10dc3e5d8c02e2b642d4494b7c8"`);
        await queryRunner.query(`ALTER TABLE "PostUserActivities" DROP CONSTRAINT "FK_c302daff8bba408263da61bf430"`);
        await queryRunner.query(`ALTER TABLE "PostVotes" DROP CONSTRAINT "FK_42dc2d7cdbae0866d5966fd6476"`);
        await queryRunner.query(`ALTER TABLE "PostVotes" DROP CONSTRAINT "FK_726942ce44f65576219f23a3d3c"`);
        await queryRunner.query(`ALTER TABLE "PostViews" DROP CONSTRAINT "FK_2e53580c4735d68263f80f55a49"`);
        await queryRunner.query(`ALTER TABLE "UserRoles" DROP CONSTRAINT "FK_eebd61741964d948d277e831c4c"`);
        await queryRunner.query(`ALTER TABLE "UserRoles" DROP CONSTRAINT "FK_bd9e34313e9bb51d8b448f48f5c"`);
        await queryRunner.query(`ALTER TABLE "RoleClaims" DROP CONSTRAINT "FK_0e61caf01a527d8fa060d9758d2"`);
        await queryRunner.query(`ALTER TABLE "UserRefreshTokens" DROP CONSTRAINT "FK_b762c2ee45e1bf683df989dcea0"`);
        await queryRunner.query(`ALTER TABLE "UserClaims" DROP CONSTRAINT "FK_298150cde4c6cd60d77f8ec48d8"`);
        await queryRunner.query(`ALTER TABLE "UserTokens" DROP CONSTRAINT "FK_c6f9656c0eb5ae8adfbb5094fd8"`);
        await queryRunner.query(`ALTER TABLE "UserSocials" DROP CONSTRAINT "FK_5657108e203a5fddba11bfcfe50"`);
        await queryRunner.query(`ALTER TABLE "UserOtps" DROP CONSTRAINT "FK_05c5c50b41121d3c1c1e1b795ba"`);
        await queryRunner.query(`ALTER TABLE "UserLogins" DROP CONSTRAINT "FK_8d3eed87c7360dbdc49fac1c24c"`);
        await queryRunner.query(`DROP TABLE "Users"`);
        await queryRunner.query(`DROP TABLE "Posts"`);
        await queryRunner.query(`DROP TABLE "PostItems"`);
        await queryRunner.query(`DROP TABLE "PostUserActivities"`);
        await queryRunner.query(`DROP TABLE "PostVotes"`);
        await queryRunner.query(`DROP TABLE "PostViews"`);
        await queryRunner.query(`DROP TABLE "MediaFiles"`);
        await queryRunner.query(`DROP TABLE "Categories"`);
        await queryRunner.query(`DROP TABLE "UserRoles"`);
        await queryRunner.query(`DROP TABLE "Roles"`);
        await queryRunner.query(`DROP TABLE "RoleClaims"`);
        await queryRunner.query(`DROP TABLE "UserRefreshTokens"`);
        await queryRunner.query(`DROP TABLE "UserClaims"`);
        await queryRunner.query(`DROP TABLE "UserTokens"`);
        await queryRunner.query(`DROP TABLE "UserSocials"`);
        await queryRunner.query(`DROP TABLE "UserOtps"`);
        await queryRunner.query(`DROP TABLE "UserLogins"`);
    }

}
